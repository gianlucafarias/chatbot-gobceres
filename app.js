

const ubicacionCIC = {
    longitude: -29.8802023,
    latitude: -61.9521255
}

const contact = {
    name: "Gian",
    phone: "+5493491440894"
}

const {
    createBot,
    createProvider,
    createFlow,
    addKeyword,
    addAnswer,
    EVENTS,
    
} = require('@bot-whatsapp/bot')


const QRPortalWeb = require('@bot-whatsapp/portal')
const BaileysProvider = require('@bot-whatsapp/provider/baileys')
const MockAdapter = require('@bot-whatsapp/database/mock')

let STATUS = {}

let errores = 0;
/*
const flowHola = addKeyword('console').addAnswer('Por favor, responde a las siguientes preguntas:')
.addAnswer(
'¬øQue tipo de Reclamo es?',
'1. Cambio de Luminaria',
'2. Bache',
'3. Faltante de agua',

{capture:true},
async (ctx,{flowDynamic}) =>{

telefono = ctx.from
reclamo = STATUS[telefono] = {...STATUS[telefono], reclamo : ctx.body}                //‚û°Ô∏è Variable del STATUS
telefono = STATUS[telefono] = {...STATUS[telefono], telefono : ctx.from}        // Variable del STATUS
                                                                              // Ejemplo // NOMBRE VARIABLE = TATUS[telefono], NOMBRE VARIABLE : ctx.body

flowDynamic()
})
.addAnswer(
'¬øPodes decirme donde est√° ubicado?',
{capture:true},
async (ctx,{flowDynamic}) =>{
   
telefono = ctx.from
ubicacion = STATUS[telefono] = {...STATUS[telefono], ubicacion : ctx.body}
flowDynamic()
})
.addAnswer(
'Dime tus apellidos',
{capture:true},
async (ctx,{flowDynamic}) =>{


telefono = ctx.from
apellidos = STATUS[telefono] = {...STATUS[telefono], apellidos : ctx.body}      //Variable del STATUS
console.log(STATUS[telefono].sexo)
flowDynamic()
})
.addAnswer('¬øQu√© edad tienes?',
{capture:true},
async (ctx,{flowDynamic}) =>{


    telefono = ctx.from
    edad = STATUS[telefono] = {...STATUS[telefono], edad : ctx.body}            //Variable del STATUS
/////////////////////       ESTA FUNCION A√ëADE UNA FILA A SHEETS    /////////////////////////
   ingresarDatos();  
   async function ingresarDatos(){
    console.log(STATUS[telefono].sexo)
    let rows = [{
   // Ejemplo: // CABECERA DE SHEET : VARIABLE        //                             ‚û°Ô∏è   Paso 3 - Aqu√≠ a√±ades las variables creadas
   
    Reclamo: STATUS[telefono].reclamo,    
    Ubicacion: STATUS[telefono].ubicacion,
    Apellidos: STATUS[telefono].apellidos,
    Telefono: STATUS[telefono].telefono,
    Edad: STATUS[telefono].edad,
    Estado: STATUS[telefono].estado
   
        }];
   
    await doc.useServiceAccountAuth({
            client_email: CREDENTIALS.client_email,
            private_key: CREDENTIALS.private_key
        });
        await doc.loadInfo();
        let sheet = doc.sheetsByIndex[0];
        for (let index = 0; index < rows.length; index++) {
            const row = rows[index];
            await sheet.addRow(row);}
}

await flowDynamic ([{body:`Perfecto ${STATUS[telefono].nombre}, espero que te haya parecido sencillo el formulario üòÅ`}])
await flowDynamic ({body:`Puedes consultar tus datos escribiendo *Consultar mis datos* o haciendo clic aqu√≠:`, buttons:[{body:'üîç Consultar mis datos üîç'}]})
});
//////////////////////////// FLUJO PARA CONSULTAR DATOS /////////////////////////////////////////////////////////

const flowConsultar = addKeyword('Consultar mis datos','üîç Consultar mis datos üîç')
.addAnswer(['Dame unos segundo, estoy buscando tus datos dentro del sistema... üîç'])
.addAnswer(['Seg√∫n el tel√©fono del cu√°l me estas escribiendo, tengo estos datos:'],{delay:3000}, async (ctx, {flowDynamic}) =>{
telefono = ctx.from

const consultar = await consultarDatos(telefono)

const Sexo = consultados['Sexo']                        // AQUI DECLARAMOS LAS VARIABLES CON LOS DATOS QUE NOS TRAEMOS DE LA FUNCION         VVVVVVVVV
const Nombre = consultados['Nombre']
const Apellidos = consultados['Apellidos']
const Telefono = consultados['Telefono']
const Edad = consultados['Edad']

await flowDynamic(`- *Sexo*: ${Sexo}\n- *Nombre*: ${Nombre}\n- *Apellidos*: ${Apellidos}\n- *Telefono*: ${Telefono}\n- *Edad*: ${Edad}`)
})
/////////////////////       ESTA FUNCION CONSULTA LOS DATOS DE UNA FILA !SEG√öN EL TEL√âFONO!    ////////////////////////
   async function consultarDatos(telefono){
    await doc.useServiceAccountAuth({
        client_email: CREDENTIALS.client_email,
        private_key: CREDENTIALS.private_key
    });
    await doc.loadInfo();
    let sheet = doc.sheetsByTitle['Hoja 1'];                        // AQU√ç DEBES PONER EL NOMBRE DE TU HOJA  
    consultados = [];
    let rows = await sheet.getRows();
    for (let index = 0; index < rows.length; index++) {
        const row = rows[index];
        if (row.Telefono === telefono) {
           
            consultados['Sexo'] = row.Sexo                      // AQU√ç LE PEDIMOS A LA FUNCION QUE CONSULTE LOS DATOS QUE QUEREMOS CONSULTAR EJEMPLO:
            consultados['Nombre'] = row.Nombre        
            consultados['Apellidos'] = row.Apellidos                  // consultados['EL NOMBRE QUE QUIERAS'] = row.NOMBRE DE LA COLUMNA DE SHEET
            consultados['Telefono'] = row.Telefono
            consultados['Edad'] = row.Edad
        }
           
}          
return consultados
};


const flowSacarTurno = addKeyword('turno')
    .addAnswer('decime tu nombre', {capture:true},
    async (ctx, { state }) => {
        firstname = ctx.body.toString(); // se almacena en la tabla wp_amelia_customer_bookings campo info
        state.update({NOMBRE : ctx.body});
    }
    )
    .addAnswer('decime tu apellido', {capture:true},
    async (ctx, { state }) => {
        lastname = ctx.body.toString(); // se almacena en la tabla wp_amelia_customer_bookings campo info
        state.update({APELLIDO : ctx.body});
    }
    )
    .addAnswer('decime tu correo electronico', {capture:true},
    async (ctx, { state }) => {
        correo = ctx.body.toString(); // se almacena en la tabla wp_amelia_customer_bookings campo info
        state.update({MAIL : ctx.body});
    }
    )
    .addAnswer('decime tu dni', {capture: true},
    async (ctx, { state }) => {
        dni = ctx.body // se almacena en wp_amelia_customer_bookings 1 customFields
    })
    .addAnswer('Seleccione el tipo de tramite:') 
    .addAnswer(['1. Nueva licencia',
                '2. Renovaci√≥n de Licencia',{capture:true}, 
    async (ctx, { state }) => {
        const categoria = parseInt(ctx.body); // se almacena en wp_amelia_categories
    }
    ])
    

*/

const flowAyuda = addKeyword('ayuda')
    .addAnswer('Parece que no encuentro la opci√≥n que buscas. ¬øNecesitas ayuda?')
    .addAnswer('Escrib√≠ la palabra *Hola* para volver al men√∫ principal. Tambi√©n podes escribir *Tr√°mites*, *CIC*, *G√©nero* o *Licencias* para otras opciones')
    errores= 0;



const flowTramites = addKeyword('Tramites')
  .addAnswer('Hacer tr√°mites puede ser muy aburrido y estresante, por eso quiero facilitarte las cosas üí™')
  .addAnswer([
    'Ahora puedes hacer lo siguiente desde ac√°:',
    'Contame, ¬øsobre qu√© necesitas saber?',
    '1. üëâ Camino rural',
    '2. üëâ Moratorias',
    '\n\nEscrib√≠ el n√∫mero del men√∫ sobre el tema que te interese para continuar.',
  ],
  )
  .addAction({ capture: true }, async (ctx, { flowDynamic, gotoFlow }) => {
    const opcion = parseInt(ctx.body);
    if (![1, 2].includes(opcion)) {
        errores++;

            if (errores > 2 )
            {
                return gotoFlow(flowAyuda);

            }
        await flowDynamic("‚ö†Ô∏è Opci√≥n no encontrada, por favor seleccione una opci√≥n v√°lida.");

        await gotoFlow(flowTramites);
        return;
    }
    switch (opcion) {
        
      case 1: return flowDynamic('Si queres pagar este impuesto, hace clic ac√° üëáhttps://bit.ly/pagarimpuestosceres \n\n Volv√© a escribir *Tramites* para volver al men√∫ anterior o *Hola* para volver al men√∫ principal.');
      case 2: return flowDynamic('Si est√°s adherido a una moratoria y queres pagarla, hace clic ac√° üëá https://bit.ly/pagarimpuestosceres \n\n Volv√© a escribir *Tramites* para volver al men√∫ anterior o *Hola* para volver al men√∫ principal.');
      default: return flowDynamic('No te entiendo üò¢ Necesitas ayuda? Escrib√≠ la palabra *Hola* para volver a empezar')
    }
  });

    const flowLicencias = addKeyword('Licencias')
   .addAnswer('Si vas a conducir un veh√≠culo, s√≠ o s√≠ necesitas contar con una licencia de conducir üöóüöôüõµüööüöú', 
   null, async (ctx, { provider } ) => {
    const sock = await provider.getInstance();
    const msgPoll = {
    sticker: {
    url:
    "media/licencia.webp"
    }
    };
    sock.sendMessage(ctx.key.remoteJid, msgPoll)
    })
   .addAnswer([
    'Eleg√≠ una de estas opciones y seguimos:',
    '1. üëâ Requisitos para sacar la licencia de conducir',
    '2. üëâ Sacar turno',

    '\n\n Escrib√≠ el n√∫mero del men√∫ sobre el tema que te interese para continuar.',
   ])

      .addAction({ capture: true }, async (ctx, { flowDynamic, gotoFlow }) => {
        const opcion = parseInt(ctx.body);
        if (![1, 2].includes(opcion)) {
            errores++;

            if (errores > 2 )
            {
                return gotoFlow(flowAyuda);

            }
            await flowDynamic("‚ö†Ô∏èOpci√≥n no encontrada, por favor seleccione una opci√≥n v√°lida.");
    
            await gotoFlow(flowLicencias);
            return;
        }
        switch (opcion) {
          case 1: return flowDynamic('Toda la info sobre licencias, como tipo de licencias, requisitos, renovaci√≥n, p√©rdida y m√°s, lo encontras ac√° üëá https://ceres.gob.ar/turnos/ \n\n Escrib√≠ *Licencias* para volver al men√∫ anterior o *Hola* para volver al men√∫ principal.');
          case 2: return flowDynamic('Ahora podes sacar tu turno desde ac√° üëá https://ceres.gob.ar/turnos/ \n\n Escrib√≠ *Licencias* para volver al men√∫ anterior o *Hola* para volver al men√∫ principal.');
        }
      });
    

    const flowCIC = addKeyword('CIC')
    .addAnswer('El Centro de Integraci√≥n Comunitaria se encuentra en Avenida Per√≥n y Pasaje Meli√°n. Te env√≠o la ubicaci√≥n:')
    .addAction(async (ctx, { provider }) => {
        const id = ctx.key.remoteJid;
        await provider.sendLocation(id, -29.8802023, -61.9544215)
    })
    .addAnswer(['Ac√° brindamos un mont√≥n de servicios, por ejemplo: ',
    '1. üëâ Salud üë©‚Äç‚öïÔ∏è',
    '2. üëâ Acci√≥n social ü§ù',
    '3. üëâ G√©nero y diversidad üíú',

    '\n\n Eleg√≠ alguna de esas opciones y te ayudo. ',

    ],)
    .addAction({ capture: true }, async (ctx, { flowDynamic, gotoFlow }) => {
        const opcion = parseInt(ctx.body);
        if (![1, 2, 3].includes(opcion)) {
            errores++;

            if (errores > 3 )
            {
                return gotoFlow(flowAyuda);
            }
            await flowDynamic("‚ö†Ô∏è Opci√≥n no encontrada, por favor seleccione una opci√≥n v√°lida.");
    
            await gotoFlow(flowCIC);
            return;
        }
        switch (opcion) {
        case 1: return flowDynamic('En el CIC ofrecemos los siguientes servicios de salud ü©∫\n\n Odontolog√≠a \n Ginecolog√≠a \n M√©dica cl√≠nica \n Obstetricia \n Pediatr√≠a \n Servicio de enfermer√≠a\n\n Escrib√≠ *CIC* para volver al men√∫ anterior o *Hola* para volver al men√∫ principal.');
        case 2: return flowDynamic('Si necesitas ayuda con tr√°mites, en el CIC te orientamos en: \n\n Retenci√≥n del 20% de AUH \n Tarifa social \n Tarifa de servicio \n Becas Progresar \n Adultos 2000, plan para finalizar la secundaria \n Asesoramiento e inicio de tr√°mites previsionales\n\n Para m√°s info, acercate a Avenida Per√≥n y Pje. Meli√°n üìç\n\n Escrib√≠ *CIC* para volver al men√∫ anterior o *Hola* para volver al men√∫ principal.');
        case 3: return gotoFlow(flowGenero);
        }
    });

    const flowMujerSegura = addKeyword('programa mujer segura')
    .addAnswer('Este programa fue una iniciativa de la actual gesti√≥n que tiene como fin prevenir la violencia de g√©nero y asistir en caso de ser necesario üôå', {delay: 4000})
    .addAnswer(['Entre las acciones que se plantean en este programa, nombramos las siguientes:',
                'Capacitaci√≥n en Ley Micaela a todos los agentes municipales as√≠ como capacitaciones en los clubes y a j√≥venes en los colegios',
                'Taller ‚ÄúUn taller para repensar las masculinidades‚Äù que tiene como fin facilitar un espacio de reflexi√≥n sobre g√©nero, masculinidad y violencia',
                'Puesta en marcha y capacitaci√≥n para su instrumentaci√≥n de los siguientes protocolos',
                '- Protocolo de atenci√≥n integral a v√≠ctimas de violencia de g√©nero del municipio',
                '- Protocolo de abordaje de las violencias y acoso en el mundo del trabajo',
                '- Herramienta para las familias y amigos de v√≠ctimas de violencia',
                'Parada segura: se trata de puntos en zonas estrat√©gicas de la ciudad con carteles con informaci√≥n sobre tel√©fonos de emergencia y protocolos',
                'Red de atenci√≥n a mujeres (RAM): atenci√≥n integral y especializada asesoramiento, acompa√±amiento y asistencia integral'              
                ])
    .addAnswer('Si queres m√°s informaci√≥n, hace clic ac√° üëá https://ceres.gob.ar/programamujersegura/ ')
    
    
    const flowGenero = addKeyword('Genero')
    .addAnswer(['Decime qu√© necesitas saber üëá',
    '1. üëâ Informaci√≥n del √°rea',
    '2. üëâ Informaci√≥n del programa ‚ÄúMujer segura‚Äù',
    '3. üëâ Guardia 24 horas equipo local',

    '\n\n Escrib√≠ el n√∫mero del men√∫ sobre el tema que te interese para continuar.',
    ],)
    .addAction({ capture: true }, async (ctx, { flowDynamic, gotoFlow }) => {
        const opcion = parseInt(ctx.body);
        if (![1, 2].includes(opcion)) {
            await flowDynamic("‚ö†Ô∏è Opci√≥n no encontrada, por favor seleccione una opci√≥n v√°lida.");
    
            await gotoFlow(flowGenero);
            return;
        }
        switch (opcion) {
        case 1: return flowDynamic('Desde el √°rea de g√©nero y diversidad, brindamos ayuda y asesoramiento a personas que sufren alg√∫n tipo de violencia por su g√©nero y/o condici√≥n üíú \n\n Tenemos como fin la creaci√≥n y puesta en acci√≥n de pol√≠ticas p√∫blicas orientadas a promover, prevenir y erradicar cualquier tipo y todas las vulneraciones de derechos en infancias, adolescencias, familias, mujeres y diversidades sexuales \n Si queres conocer m√°s sobre esta √°rea o si necesitas ayuda, podes acercarte al CIC (Avenida Per√≥n y Pje. Meli√°n) o contactate al 3491560492 / 03491422353 ü§≥ \n\nEscrib√≠ *Genero* para volver al men√∫ anterior o *Hola* para volver al men√∫ principal.');
        case 2: return gotoFlow(flowMujerSegura);
        }
    });

    
    const flowTurismo = addKeyword('Turismo')
    .addAnswer('¬°Nuestra ciudad tiene un mont√≥n de cosas para disfrutar! ü§©',
    null, async (ctx, { provider } ) => {
        const sock = await provider.getInstance();
        const msgPoll = {
        sticker: {
        url:
        "media/turismo.webp"
        }
        };
        sock.sendMessage(ctx.key.remoteJid, msgPoll)
        })
    .addAnswer(['¬øSobre qu√© queres saber? üëá',
    '1. üëâ Hoteles',
    '2. üëâ Bares y restaurantes',
    '3. üëâ Atractivos tur√≠sticos',
    '4. üëâ Programaci√≥n Usina cultural Ceres',

    '\n\n Escrib√≠ el n√∫mero del men√∫ sobre el tema que te interese para continuar.',
    ],)
    .addAction({ capture: true }, async (ctx, { flowDynamic, provider, gotoFlow, endFlow}) => {
        const id = ctx.key.remoteJid;
        const opcion = parseInt(ctx.body);
        if (![1, 2, 3, 4].includes(opcion)) {
            errores++;

            if (errores > 2 )
            {
                return gotoFlow(flowAyuda);

            }
            await flowDynamic("‚ö†Ô∏è Opci√≥n no encontrada, por favor seleccione una opci√≥n v√°lida.", {delay: 3000});
    
            await gotoFlow(flowTurismo);
            return;
        }
        switch (opcion) {
        case 1: return provider.sendImage(id, 'media/hoteles.png', 'Todos los hoteles y hospedajes de Ceres, en esta placa üè® \n\nEscrib√≠ *Turismo* para volver al men√∫ anterior o *Hola* para volver al men√∫ principal.');
        case 2: return provider.sendImage(id, 'media/comedores.png', 'Todos los bares y restaurantes de Ceres, en esta placa üçπ \n\nEscrib√≠ *Turismo* para volver al men√∫ anterior o *Hola* para volver al men√∫ principal.');
        case 3: return provider.sendImage(id, 'media/atractivos.png', 'Todos los puntos tur√≠sticos y recreativos de Ceres, en esta placa üì∏ \n\nEscrib√≠ *Turismo* para volver al men√∫ anterior o *Hola* para volver al men√∫ principal.');
        case 4: return flowDynamic('üé¨ Para conocer qu√© hay este fin de semana en la Usina cultural Ceres, entr√° a las redes sociales oficiales\n\nInstagram: https://instagram.com/ceresturismo \nFacebook: https://facebook.com/ceresturismo\n\nEscrib√≠ *Turismo* para volver al men√∫ anterior o *Hola* para volver al men√∫ principal.');

        }
        return endFlow(flowAyuda)
    });


    const flowHistoria = addKeyword('historia')
    .addAnswer('Ac√° te dejamos un peque√±o resumen sobre la historia de nuestra querida ciudad üëá', {delay: 4000})
    .addAnswer(['El 1 de julio de 1892 Ceres se constitu√≠a como colonia gracias al decreto del entonces gobernador de Santa Fe, Juan M. Cafferata, en un momento de plena expansi√≥n del pa√≠s.',
                'Sin embargo, estas tierras se vieron habitadas varios a√±os antes. En 1888, durante la presidencia del Dr. Miguel Ju√°rez Celman y en un contexto de gran expansi√≥n de las redes ferroviarias, se estableci√≥ el kil√≥metro 125 en el actual territorio ceresino. ¬øQu√© significaba esto? As√≠ se denomin√≥ a la estaci√≥n ferroviaria de nuestra ciudad por ser la distancia que nos separaba de Sunchales, punta de riel hasta entonces. ',
                'Es as√≠ que un 8 de abril de 1888 lleg√≥ el primer tren con materiales y personas que levantar√≠an las instalaciones del nuevo punto. Sin embargo, ya hab√≠a dos pobladores en las tierras de lo que hoy es Ceres: Don Gregorio Luna y Don Pedro C√≥rdoba. Para el Cincuentenario de la ciudad, Luna hab√≠a fallecido hac√≠a muy poco y C√≥rdoba se encontraba todav√≠a vivo. En el libro de ese aniversario, se sostiene que estas dos personas ‚Äúayudaron en la tarea de amojonamiento del pueblo y de la colonia‚Äù.',
                'Volviendo a la instalaci√≥n del ferrocarril en la zona, esta acci√≥n gener√≥ que una gran cantidad de empleados se radicaran ac√°, lo que provoc√≥ que tambi√©n se instalaran negocios para proveer de mercanc√≠a a los ferroviarios. Las tierras del km 125 pertenec√≠an a la Sociedad Colonizadora Argentina, creada por Vicente Casares y Trist√°n Malbr√°n, quienes donaron los terrenos para la instalaci√≥n de las v√≠as y estaciones.',
                'Con el correr de los a√±os sigui√≥ increment√°ndose la cantidad de habitantes del kil√≥metro 125, principalmente con colonos de distintos puntos del pa√≠s e inmigrantes, en su mayor√≠a italianos, atra√≠dos por las facilidades que se otorgaban para comprar tierras y con la comprobaci√≥n de que eran sumamente aptas para el ganado y la agricultura. Por este motivo se comenz√≥ a hacer referencia a la Diosa Ceres, diosa romana de la agricultura, las cosechas y la fecundidad.',
                'Luego de 73 a√±os de existencia y con 9.588 habitantes, sin haber llegado a las 10.000 requeridos, el gobernador Carlos S. Begnis declar√≥ oficialmente ciudad a Ceres en el a√±o 1961. Se trataron de m√°s de 70 a√±os caracterizados por una gran expansi√≥n cultural, social y econ√≥mica: florecieron instituciones y la actividad econ√≥mica creci√≥ a grandes ritmos, principalmente por el sector agropecuario. Ese mismo a√±o, nuestra ciudad contabilizaba 120 tambos, 221 establecimientos agr√≠colas y 425 negocios.',
                'Este a√±o, la ciudad cumpli√≥ 131 a√±os y seg√∫n los √∫ltimos datos, estamos cerca de los 20.000 habitantes. Ceres se constituye como el centro comercial y de servicios m√°s importante de la zona, teniendo un radio de influencia muy importante en toda el √°rea.',
])
    .addAnswer('Escrib√≠ *Hola* para volver al men√∫ principal.')

    const flowSeccionesPatio = addKeyword('Secciones patio')
    .addAnswer('Los residuos de patio se recogen una vez al mes y seg√∫n las secciones de nuestra ciudad')
    .addAnswer(['Secci√≥n 1 ‚û°Ô∏è 1ra semana del mes',
                'Secci√≥n 2 ‚û°Ô∏è 2da semana del mes',
                'Secci√≥n 3 ‚û°Ô∏è 3ra semana del mes',
                'Secci√≥n 4 ‚û°Ô∏è 4ta semana del mes'])
    .addAction(async (ctx, { provider }) => {
        const id = ctx.key.remoteJid;
        return provider.sendImage(id, 'media/secciones.png', 'Ac√° podes ver cu√°l es tu secci√≥n üó∫Ô∏è');
    })
    .addAnswer(['*üì¢ Informaci√≥n importante*',
                'Sac√° los residuos la semana previa a que inicie la recolecci√≥n en tu secci√≥n. Si los sacas cuando ya estamos recolectando en tu secci√≥n, es probable que hayamos pasado y los podamos buscar reci√©n dentro de tres semanas üöÆ  \n\nEscrib√≠ *Residuos* para volver al men√∫ anterior o *Hola* para volver al men√∫ principal.'])


    const flowResiduos = addKeyword('separacion', 'residuos')
    .addAnswer('Separar los residuos es fundamental para el cuidado de nuestro planeta. Selecciona qu√© info necesitas saber üåé')
    .addAnswer(['¬øSobre qu√© queres saber? üëá',
    '1. üëâ Separaci√≥n y recolecci√≥n residuos domiciliarios ‚ôªÔ∏è',
    '2. üëâ Separaci√≥n y recolecci√≥n residuos de patio üçÇ',
    '3. üëâ Info sobre la Cooperativa de Trabajo ‚ÄúReciclar Ceres‚Äù üí™',

    '\n\n Escrib√≠ el n√∫mero del men√∫ sobre el tema que te interese para continuar.',
    ],)
    .addAction({ capture: true }, async (ctx, { flowDynamic, gotoFlow,  }) => {
        const opcionresiduos = parseInt(ctx.body);
        if (![1, 2, 3].includes(opcionresiduos)) {
            errores++;

            if (errores > 2 )
            {
                return gotoFlow(flowAyuda);
            }
            await flowDynamic("‚ö†Ô∏è Opci√≥n no encontrada, por favor seleccione una opci√≥n v√°lida.");
            await gotoFlow(flowResiduos);
            return;
        }
        switch (opcionresiduos) {
        case 1: return flowDynamic('Recorda sacar los residuos de la siguiente manera üëá \n\n Residuos secos \n üìÜ Los recogemos martes y viernes (sacalos la noche del lunes y del jueves) \n\n Residuos h√∫medos \nüìÜ Los recogemos lunes, mi√©rcoles, jueves y s√°bado \n\n\n *Algo muy importante: no dejes tus residuos en los pilares de luz porque no podremos recogerlos ‚ÄºÔ∏è* \n\nEscrib√≠ *Residuos* para volver al men√∫ anterior o *Hola* para volver al men√∫ principal.');              
        case 2: return gotoFlow(flowSeccionesPatio);
        case 3: return flowDynamic('Hace muy poco, en nuestra ciudad se conform√≥ legalmente, gracias al acompa√±amiento del municipio, la cooperativa de trabajo ‚ÄúReciclar Ceres‚Äù ‚ôªÔ∏è\n\n Se trata de un paso s√∫per importante ya que les brinda nuevas oportunidades para su desarrollo y crecimiento econ√≥mico y profesional. Con su constituci√≥n tienen m√°s independencia en sus acciones, podr√°n acceder a cr√©ditos y subsidios; contar con m√°s estabilidad laboral, entre otras cuestiones üí™\n\n Cuando separas los residuos correctamente, colaboras con las personas de esta cooperativa, que trabajan diariamente en el Centro de Disposici√≥n Final. ¬°Hacelo por el planeta, por vos y por ellos! üíö \n\nEscrib√≠ *Residuos* para volver al men√∫ anterior o *Hola* para volver al men√∫ principal.');
        }
    });


    const flowEducacion = addKeyword('educacion')
    .addAnswer('¬øQuer√©s estudiar? ¬°Te felicitamos! En Ceres podes capacitarte en dos carreras universitarias y tambi√©n en rob√≥tica ü§ì')
    .addAnswer(['¬øSobre qu√© queres saber? üëá',
    '1. üëâ Tecnicaturas de la UTN en Ceres',
    '2. üëâ Rob√≥tica y Club de Ciencias',
    '\n\n Escrib√≠ el n√∫mero del men√∫ sobre el tema que te interese para continuar.',
    ],)
    .addAction({ capture: true }, async (ctx, { flowDynamic, gotoFlow }) => {
        const opcion = parseInt(ctx.body);
        if (![1, 2].includes(opcion)) {
            errores++;

            if (errores > 2 )
            {
                return gotoFlow(flowAyuda);
            }
            await flowDynamic('‚ö†Ô∏è Opci√≥n no encontrada, por favor seleccione una opci√≥n v√°lida.');
            await gotoFlow(flowEducacion);
            return;
        }
        switch (opcion) {
        case 1: return flowDynamic('¬°Genial! En Ceres podes cursar dos carreras con mucha salida laboral \n\n Tecnicatura en Administraci√≥n Rural üìö \n Tecnicatura en Programaci√≥n üìö \n\n Toda la informaci√≥n sobre estas carreras pertenecientes a la UTN, la encontras en este instagram üëá https://instagram.com/utnceresextension \n\nEscrib√≠ *Educaci√≥n* para volver al men√∫ anterior o *Hola* para volver al men√∫ principal.');              
        case 2: return flowDynamic('El Club de Ciencias fue una gesti√≥n realizada por el municipio y permite que ni√±os, j√≥venes y adolescentes puedan capacitarse en rob√≥tica ü§ñ \n\n Si queres m√°s informaci√≥n, contactate al 03491-421990 üìû \n\nEscrib√≠ *Educaci√≥n* para volver al men√∫ anterior o *Hola* para volver al men√∫ principal.');
        }
    });


    const flowConsejoAdultos = addKeyword('consejo adultos mayores')
    .addAnswer('En el 2021, se conform√≥ el Consejo de Adultos Mayores por impulso del Gobierno de la Ciudad üíõ \n\n Esta iniciativa tiene como fin trabajar en la participaci√≥n ciudadana e impulsar acciones que mejoren la calidad de vida de los adultos mayores üí™')
    .addAnswer(['Actualmente, las comisiones se encuentran divididas de la siguiente manera:',
                'Juegos, deporte y recreaci√≥n',
                'Salud',
                'Cultura y educaci√≥n',
                'G√©nero y diversidad'])
    .addAnswer('Si queres sumarte a esta propuesta, acercarte al CIC y te damos toda la info üíõ')


    const flowActividadesAdultos = addKeyword('actividades adultos mayores')
    .addAnswer('Si quer√©s sumarte a las actividades para adultos mayores, te dejamos todas las que ofrecemos üëá', {delay: 3000})
    .addAnswer(['*Ajedrez ‚ôüÔ∏è*',
               'üìÜ Lunes y mi√©rcoles',
               '‚åö 14 a 16 horas',
               'üìçSal√≥n de la Terminal de √ìmnibus',
               'Dicta Facundo Dom√≠nguez\n',
               '*Taller Cognitivo ‚ÄúReactiva‚Äù üß†*',
               'üìÜ Martes',
               '‚åö 15 a 16 horas',
               'üìçPaseo de la Vida',
               'üìÜ Mi√©rcoles',
               '‚åö 15 horas',
               'üìçVecinal del barrio Instituto',
               'Dicta Lic. Lourdes Villalba\n',
               '*Folclore üíÉ*',
               'üìÜ Mi√©rcoles y viernes',
               '‚åö 14.30 a 16.30 horas',
               'üìçPaseo de la Vida',
               'Dicta Marcela Guerra\n',
               '*Cuerpo y movimiento ü§∏‚Äç‚ôÄÔ∏è*',
               'üìÜ Martes y jueves',
               '‚åö 08 a 09 horas / 09 a 10 horas',
               'üìçSociedad italiana',
               'Dicta Vanesa Hauce\n',
                'Tejo ü•è',
                'üìÜ Lunes, mi√©rcoles y viernes',
                '‚åö 14.30 a 17 horas',
                'üìçPaseo de la Vida',
                'Dicta Paola Albertinazzi\n',
                'Yoga üßò',
                'üìÜ Lunes y mi√©rcoles',
                '‚åö 09 a 10 horas',
                'üìçSociedad italiana',
                'Dicta Amorela Griffa',
            ])
    .addAnswer('Para participar, agenda d√≠a y horario y acercate directamente a la actividad üòä')

    const flowAdultosmayores = addKeyword('actividades adultos mayores')
    .addAnswer('Desde el Gobierno de la Ciudad de Ceres impulsamos un mont√≥n de actividades para los adultos mayores ü§©')
    .addAnswer(['¬øSobre qu√© queres saber? üëá',
    '1. üëâ Consejo de Adultos Mayores üì£',
    '2. üëâ Actividades recreativas para adultos mayores üßë‚Äçü¶≥',
    '\n\n Escrib√≠ el n√∫mero del men√∫ sobre el tema que te interese para continuar.',
    ],)

    .addAction({ capture: true }, async (ctx, { flowDynamic, gotoFlow, provider }) => {
        const opcion = parseInt(ctx.body);

        if (![1, 2].includes(opcion)) {
            errores++;

            if (errores > 2 )
            {
                return gotoFlow(flowAyuda);
            }
            await flowDynamic("‚ö†Ô∏è Opci√≥n no encontrada, por favor seleccione una opci√≥n v√°lida.");

            await gotoFlow(flowAdultosmayores);
            return;
        }

        errores = 0;
        switch (opcion) {
        case 1: return gotoFlow(flowConsejoAdultos);              
        case 2: return gotoFlow(flowActividadesAdultos);
        }
    }, 
    );


    const flowDengue = addKeyword('dengue')
    .addAnswer('Al dengue lo frenamos trabajando en equipo üí™')
    .addAnswer(['Toda la info sobre esta enfermedad, c√≥mo se trasmite y c√≥mo prevenirlo, lo encontras en nuestra p√°gina haciendo clic ac√° üëá https://ceres.gob.ar/dengue/\n\n',
                '¬°Necesitamos de tu colaboraci√≥n y acci√≥n para prevenirlo! ü¶üüö´',
                '\n\nEscrib√≠ *Hola* para volver al men√∫ principal']
                )

    const flowEmpty = addKeyword(EVENTS.ACTION)
                .addAnswer("No te he entendido!", null, async ( { gotoFlow }) => {
                  return gotoFlow(flowPrincipal);
                });


const flowPrincipal = addKeyword('hola', 'menu')
    .addAnswer('üôå ¬°Hola! Soy Ceresito, el chatbot del Gobierno de la Ciudad de Ceres üçí', null, async (ctx, { provider } ) => {
        const sock = await provider.getInstance();
        const msgPoll = {
        sticker: {
        url:
        "media/ceresito.webp"
        }
        };
        sock.sendMessage(ctx.key.remoteJid, msgPoll)
        })
    
    .addAnswer(['No soy un superh√©roe pero puedo ayudarte de muchas maneras ü¶∏‚Äç‚ôÄÔ∏è',
            'Contame, ¬øsobre qu√© necesitas saber?',
            '1. üëâ Tr√°mites üóÉÔ∏è',
            '2. üëâ Licencia de conducir ü™™',
            '3. üëâ Informaci√≥n sobre el CIC ü´Ç',
            '4. üëâ Turismo üì∏',
            '5. üëâ Historia de Ceres üèõ',
            '6. üëâ Separaci√≥n y recolecci√≥n de residuos ‚ôª',
            '7. üëâ Educaci√≥n üìö',
            '8. üëâ Actividades para adultos mayores üëµüë¥',
            '9. üëâ Prevenci√≥n del dengue ü¶ü',
   //         '10. üëâ Reclamos üìù',
            '\n\n Escrib√≠ el n√∫mero del men√∫ sobre el tema que te interese para continuar.',
        ],

        { delay: 4000, capture: true }, async (ctx, { fallBack, gotoFlow, flowDynamic }) => {
            const option = ctx.body.toLowerCase().trim();
        
            if (!["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "hola"].includes(option)) {
                await flowDynamic("‚ö†Ô∏è Opci√≥n no encontrada, por favor seleccione una opci√≥n v√°lida.");
        
                await fallBack();
                return;
            }
        
            if (option === "1") {
                return gotoFlow(flowTramites);
            }
        
            if (option === "2") {
                return gotoFlow(flowLicencias);
            }
        
            if (option === "3") {
                return gotoFlow(flowCIC);
            }
            if (option === "4") {
                return gotoFlow(flowTurismo);
            }
            if (option === "5") {
                return gotoFlow(flowHistoria);
            }
            if (option === "6") {
                return gotoFlow(flowResiduos);
            }
            if (option === "7") {
                return gotoFlow(flowEducacion);
            }
            if (option === "8") {
                return gotoFlow(flowAdultosmayores);
            }
            if (option === "9") {
                return gotoFlow(flowDengue);
            }
            
        }
    )

const main = async () => {
    const adapterDB = new MockAdapter()
    const adapterFlow = createFlow([flowPrincipal, flowEmpty, flowTramites, flowCIC, flowLicencias, flowGenero, flowTurismo, flowResiduos, flowSeccionesPatio, flowDengue, flowEducacion, flowAdultosmayores, flowActividadesAdultos, flowConsejoAdultos, flowMujerSegura, flowSeccionesPatio])
    const adapterProvider = createProvider(BaileysProvider)

    createBot({
        flow: adapterFlow,
        provider: adapterProvider,
        database: adapterDB,
    })

    QRPortalWeb()
}

main()
